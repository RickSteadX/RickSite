{'role': 'assistant', 'content': 'Now let\'s create the services that will communicate with our API. First, let\'s create an authentication service:\n\n<function_calls>\n<create-file file_path="PersonalWebsite/PersonalWebsite.Client/Services/AuthService.cs">\nusing System;\nusing System.Net.Http;\nusing System.Net.Http.Json;\nusing System.Threading.Tasks;\nusing PersonalWebsite.Client.Models;\nusing System.Text.Json;\nusing System.Text;\n\nnamespace PersonalWebsite.Client.Services\n{\n    public class AuthService\n    {\n        private readonly HttpClient _httpClient;\n        private const string AuthUrl = "api/auth";\n\n        public AuthService(HttpClient httpClient)\n        {\n            _httpClient = httpClient;\n        }\n\n        public async Task<User> LoginAsync(string username, string password)\n        {\n            var loginRequest = new\n            {\n                Username = username,\n                Password = password\n            };\n\n            var response = await _httpClient.PostAsJsonAsync($"{AuthUrl}/login", loginRequest);\n            \n            if (response.IsSuccessStatusCode)\n            {\n                return await response.Content.ReadFromJsonAsync<User>();\n            }\n\n            throw new Exception("Login failed: " + await response.Content.ReadAsStringAsync());\n        }\n\n        public async Task LogoutAsync()\n        {\n            var response = await _httpClient.PostAsync($"{AuthUrl}/logout", null);\n            \n            if (!response.IsSuccessStatusCode)\n            {\n                throw new Exception("Logout failed: " + await response.Content.ReadAsStringAsync());\n            }\n        }\n\n        public async Task<User> GetCurrentUserAsync()\n        {\n            try\n            {\n                var response = await _httpClient.GetAsync($"{AuthUrl}/current");\n                \n                if (response.IsSuccessStatusCode)\n                {\n                    return await response.Content.ReadFromJsonAsync<User>();\n                }\n                \n                return null;\n            }\n            catch\n            {\n                return null;\n            }\n        }\n    }\n}\n</create-file>\n</function_calls>'}