{'role': 'assistant', 'content': 'Now let\'s create a simple settings page for the admin area:\n\n<function_calls>\n<create-file file_path="PersonalWebsite/PersonalWebsite.Client/Pages/Admin/Settings.razor">\n@page "/admin/settings"\n@attribute [Authorize]\n@layout AdminLayout\n@inject IJSRuntime JSRuntime\n\n<PageTitle>Settings - Admin Dashboard</PageTitle>\n\n<div class="container">\n    <h1>Settings</h1>\n    \n    <div class="row mt-4">\n        <div class="col-md-8">\n            <div class="card mb-4">\n                <div class="card-header">\n                    <h3>General Settings</h3>\n                </div>\n                <div class="card-body">\n                    <form>\n                        <div class="form-group mb-3">\n                            <label for="siteName" class="form-label">Site Name</label>\n                            <input type="text" class="form-control" id="siteName" @bind="_settings.SiteName" />\n                        </div>\n                        \n                        <div class="form-group mb-3">\n                            <label for="siteDescription" class="form-label">Site Description</label>\n                            <textarea class="form-control" id="siteDescription" rows="3" @bind="_settings.SiteDescription"></textarea>\n                        </div>\n                        \n                        <div class="form-group mb-3">\n                            <label for="contactEmail" class="form-label">Contact Email</label>\n                            <input type="email" class="form-control" id="contactEmail" @bind="_settings.ContactEmail" />\n                        </div>\n                        \n                        <div class="form-group mb-3">\n                            <label for="footerText" class="form-label">Footer Text</label>\n                            <input type="text" class="form-control" id="footerText" @bind="_settings.FooterText" />\n                        </div>\n                        \n                        <button type="button" class="btn btn-primary" @onclick="SaveGeneralSettings">Save General Settings</button>\n                    </form>\n                </div>\n            </div>\n            \n            <div class="card mb-4">\n                <div class="card-header">\n                    <h3>Social Media Links</h3>\n                </div>\n                <div class="card-body">\n                    <form>\n                        <div class="form-group mb-3">\n                            <label for="github" class="form-label">GitHub URL</label>\n                            <input type="text" class="form-control" id="github" @bind="_settings.SocialLinks.GitHub" />\n                        </div>\n                        \n                        <div class="form-group mb-3">\n                            <label for="linkedin" class="form-label">LinkedIn URL</label>\n                            <input type="text" class="form-control" id="linkedin" @bind="_settings.SocialLinks.LinkedIn" />\n                        </div>\n                        \n                        <div class="form-group mb-3">\n                            <label for="twitter" class="form-label">Twitter URL</label>\n                            <input type="text" class="form-control" id="twitter" @bind="_settings.SocialLinks.Twitter" />\n                        </div>\n                        \n                        <div class="form-group mb-3">\n                            <label for="instagram" class="form-label">Instagram URL</label>\n                            <input type="text" class="form-control" id="instagram" @bind="_settings.SocialLinks.Instagram" />\n                        </div>\n                        \n                        <button type="button" class="btn btn-primary" @onclick="SaveSocialLinks">Save Social Links</button>\n                    </form>\n                </div>\n            </div>\n            \n            <div class="card">\n                <div class="card-header">\n                    <h3>Theme Settings</h3>\n                </div>\n                <div class="card-body">\n                    <form>\n                        <div class="form-group mb-3">\n                            <label for="primaryColor" class="form-label">Primary Color</label>\n                            <div class="input-group">\n                                <input type="color" class="form-control form-control-color" id="primaryColor" @bind="_settings.ThemeSettings.PrimaryColor" />\n                                <input type="text" class="form-control" @bind="_settings.ThemeSettings.PrimaryColor" />\n                            </div>\n                        </div>\n                        \n                        <div class="form-group mb-3">\n                            <label for="secondaryColor" class="form-label">Secondary Color</label>\n                            <div class="input-group">\n                                <input type="color" class="form-control form-control-color" id="secondaryColor" @bind="_settings.ThemeSettings.SecondaryColor" />\n                                <input type="text" class="form-control" @bind="_settings.ThemeSettings.SecondaryColor" />\n                            </div>\n                        </div>\n                        \n                        <div class="form-group mb-3">\n                            <label for="accentColor" class="form-label">Accent Color</label>\n                            <div class="input-group">\n                                <input type="color" class="form-control form-control-color" id="accentColor" @bind="_settings.ThemeSettings.AccentColor" />\n                                <input type="text" class="form-control" @bind="_settings.ThemeSettings.AccentColor" />\n                            </div>\n                        </div>\n                        \n                        <div class="form-group mb-3">\n                            <label for="fontHeading" class="form-label">Heading Font</label>\n                            <select class="form-select" id="fontHeading" @bind="_settings.ThemeSettings.HeadingFont">\n                                <option value="Montserrat">Montserrat</option>\n                                <option value="Roboto">Roboto</option>\n                                <option value="Open Sans">Open Sans</option>\n                                <option value="Lato">Lato</option>\n                                <option value="Poppins">Poppins</option>\n                            </select>\n                        </div>\n                        \n                        <div class="form-group mb-3">\n                            <label for="fontBody" class="form-label">Body Font</label>\n                            <select class="form-select" id="fontBody" @bind="_settings.ThemeSettings.BodyFont">\n                                <option value="Open Sans">Open Sans</option>\n                                <option value="Roboto">Roboto</option>\n                                <option value="Lato">Lato</option>\n                                <option value="Nunito">Nunito</option>\n                                <option value="Source Sans Pro">Source Sans Pro</option>\n                            </select>\n                        </div>\n                        \n                        <button type="button" class="btn btn-primary" @onclick="SaveThemeSettings">Save Theme Settings</button>\n                    </form>\n                </div>\n            </div>\n        </div>\n        \n        <div class="col-md-4">\n            <div class="card mb-4">\n                <div class="card-header">\n                    <h3>Account Settings</h3>\n                </div>\n                <div class="card-body">\n                    <form>\n                        <div class="form-group mb-3">\n                            <label for="currentPassword" class="form-label">Current Password</label>\n                            <input type="password" class="form-control" id="currentPassword" @bind="_passwordChange.CurrentPassword" />\n                        </div>\n                        \n                        <div class="form-group mb-3">\n                            <label for="newPassword" class="form-label">New Password</label>\n                            <input type="password" class="form-control" id="newPassword" @bind="_passwordChange.NewPassword" />\n                        </div>\n                        \n                        <div class="form-group mb-3">\n                            <label for="confirmPassword" class="form-label">Confirm New Password</label>\n                            <input type="password" class="form-control" id="confirmPassword" @bind="_passwordChange.ConfirmPassword" />\n                        </div>\n                        \n                        <button type="button" class="btn btn-primary" @onclick="ChangePassword">Change Password</button>\n                    </form>\n                </div>\n            </div>\n            \n            <div class="card">\n                <div class="card-header">\n                    <h3>System Information</h3>\n                </div>\n                <div class="card-body">\n                    <p><strong>Version:</strong> 1.0.0</p>\n                    <p><strong>Last Updated:</strong> @DateTime.Now.ToString("MMMM d, yyyy")</p>\n                    <p><strong>Database:</strong> SQLite</p>\n                    <p><strong>Storage:</strong> Local</p>\n                    \n                    <div class="d-grid gap-2 mt-3">\n                        <button type="button" class="btn btn-outline-primary" @onclick="ClearCache">Clear Cache</button>\n                        <button type="button" class="btn btn-outline-danger" @onclick="ResetSystem">Reset System</button>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n</div>\n\n@code {\n    private SiteSettings _settings = new SiteSettings\n    {\n        SiteName = "Alex Morgan",\n        SiteDescription = "Full Stack Developer & UX Designer",\n        ContactEmail = "alex@morgantech.dev",\n        FooterText = "© 2025 Alex Morgan. All rights reserved.",\n        SocialLinks = new SocialLinks\n        {\n            GitHub = "https://github.com/alexmorgan",\n            LinkedIn = "https://linkedin.com/in/alexmorgan",\n            Twitter = "https://twitter.com/alexmorgan",\n            Instagram = "https://instagram.com/alexmorgan"\n        },\n        ThemeSettings = new ThemeSettings\n        {\n            PrimaryColor = "#3498db",\n            SecondaryColor = "#2ecc71",\n            AccentColor = "#e74c3c",\n            HeadingFont = "Montserrat",\n            BodyFont = "Open Sans"\n        }\n    };\n    \n    private PasswordChange _passwordChange = new PasswordChange();\n    \n    private async Task SaveGeneralSettings()\n    {\n        // In a real implementation, this would save to a database or API\n        await JSRuntime.InvokeVoidAsync("alert", "General settings saved successfully!");\n    }\n    \n    private async Task SaveSocialLinks()\n    {\n        // In a real implementation, this would save to a database or API\n        await JSRuntime.InvokeVoidAsync("alert", "Social links saved successfully!");\n    }\n    \n    private async Task SaveThemeSettings()\n    {\n        // In a real implementation, this would save to a database or API\n        await JSRuntime.InvokeVoidAsync("alert", "Theme settings saved successfully!");\n    }\n    \n    private async Task ChangePassword()\n    {\n        // Validate password change\n        if (string.IsNullOrEmpty(_passwordChange.CurrentPassword))\n        {\n            await JSRuntime.InvokeVoidAsync("alert", "Please enter your current password.");\n            return;\n        }\n        \n        if (string.IsNullOrEmpty(_passwordChange.NewPassword))\n        {\n            await JSRuntime.InvokeVoidAsync("alert", "Please enter a new password.");\n            return;\n        }\n        \n        if (_passwordChange.NewPassword != _passwordChange.ConfirmPassword)\n        {\n            await JSRuntime.InvokeVoidAsync("alert", "New password and confirmation do not match.");\n            return;\n        }\n        \n        // In a real implementation, this would validate and change the password\n        await JSRuntime.InvokeVoidAsync("alert", "Password changed successfully!");\n        \n        // Reset form\n        _passwordChange = new PasswordChange();\n    }\n    \n    private async Task ClearCache()\n    {\n        bool confirmed = await JSRuntime.InvokeAsync<bool>("confirm", "Are you sure you want to clear the cache? This will refresh all data from the server.");\n        \n        if (confirmed)\n        {\n            // In a real implementation, this would clear the cache\n            await JSRuntime.InvokeVoidAsync("alert", "Cache cleared successfully!");\n        }\n    }\n    \n    private async Task ResetSystem()\n    {\n        bool confirmed = await JSRuntime.InvokeAsync<bool>("confirm", "WARNING: This will reset the entire system to default settings. All custom data will be lost. Are you sure you want to proceed?");\n        \n        if (confirmed)\n        {\n            // In a real implementation, this would reset the system\n            await JSRuntime.InvokeVoidAsync("alert", "System reset initiated. The application will restart shortly.");\n        }\n    }\n    \n    private class SiteSettings\n    {\n        public string SiteName { get; set; }\n        public string SiteDescription { get; set; }\n        public string ContactEmail { get; set; }\n        public string FooterText { get; set; }\n        public SocialLinks SocialLinks { get; set; } = new SocialLinks();\n        public ThemeSettings ThemeSettings { get; set; } = new ThemeSettings();\n    }\n    \n    private class SocialLinks\n    {\n        public string GitHub { get; set; }\n        public string LinkedIn { get; set; }\n        public string Twitter { get; set; }\n        public string Instagram { get; set; }\n    }\n    \n    private class ThemeSettings\n    {\n        public string PrimaryColor { get; set; }\n        public string SecondaryColor { get; set; }\n        public string AccentColor { get; set; }\n        public string HeadingFont { get; set; }\n        public string BodyFont { get; set; }\n    }\n    \n    private class PasswordChange\n    {\n        public string CurrentPassword { get; set; }\n        public string NewPassword { get; set; }\n        public string ConfirmPassword { get; set; }\n    }\n}\n</create-file>\n</function_calls>'}