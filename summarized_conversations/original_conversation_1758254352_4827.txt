{'role': 'assistant', 'content': 'Now let\'s create the admin dashboard page:\n\n<function_calls>\n<create-file file_path="PersonalWebsite/PersonalWebsite.Client/Pages/Admin/Dashboard.razor">\n@page "/admin"\n@attribute [Authorize]\n@layout AdminLayout\n@inject PageService PageService\n@inject NavigationManager NavigationManager\n\n<PageTitle>Admin Dashboard - Alex Morgan</PageTitle>\n\n<div class="container">\n    <h1>Admin Dashboard</h1>\n    \n    <div class="row mt-4">\n        <div class="col-md-4">\n            <div class="card">\n                <div class="card-body">\n                    <h3>Pages</h3>\n                    <p class="display-4">@(_pages?.Count ?? 0)</p>\n                    <p>Total pages in the system</p>\n                    <a href="/admin/pages" class="btn btn-primary">Manage Pages</a>\n                </div>\n            </div>\n        </div>\n        \n        <div class="col-md-4">\n            <div class="card">\n                <div class="card-body">\n                    <h3>Published Pages</h3>\n                    <p class="display-4">@(_pages?.Count(p => p.IsPublished) ?? 0)</p>\n                    <p>Pages visible to visitors</p>\n                    <a href="/admin/pages" class="btn btn-primary">View Published</a>\n                </div>\n            </div>\n        </div>\n        \n        <div class="col-md-4">\n            <div class="card">\n                <div class="card-body">\n                    <h3>Quick Actions</h3>\n                    <div class="d-grid gap-2">\n                        <a href="/admin/pages/create" class="btn btn-primary">Create New Page</a>\n                        <a href="/admin/page-builder" class="btn btn-secondary">Open Page Builder</a>\n                        <a href="/" target="_blank" class="btn btn-outline-primary">View Website</a>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n    \n    <div class="row mt-4">\n        <div class="col-md-8">\n            <div class="card">\n                <div class="card-header">\n                    <h3>Recent Pages</h3>\n                </div>\n                <div class="card-body">\n                    @if (_loading)\n                    {\n                        <div class="loading-container">\n                            <div class="spinner"></div>\n                            <p>Loading pages...</p>\n                        </div>\n                    }\n                    else if (_pages != null && _pages.Any())\n                    {\n                        <table class="table">\n                            <thead>\n                                <tr>\n                                    <th>Title</th>\n                                    <th>Status</th>\n                                    <th>Last Updated</th>\n                                    <th>Actions</th>\n                                </tr>\n                            </thead>\n                            <tbody>\n                                @foreach (var page in _pages.OrderByDescending(p => p.UpdatedAt ?? p.CreatedAt).Take(5))\n                                {\n                                    <tr>\n                                        <td>@page.Title</td>\n                                        <td>\n                                            @if (page.IsPublished)\n                                            {\n                                                <span class="badge bg-success">Published</span>\n                                            }\n                                            else\n                                            {\n                                                <span class="badge bg-secondary">Draft</span>\n                                            }\n                                        </td>\n                                        <td>@((page.UpdatedAt ?? page.CreatedAt).ToString("MMM d, yyyy"))</td>\n                                        <td>\n                                            <a href="/admin/pages/edit/@page.Id" class="btn btn-sm btn-primary">Edit</a>\n                                            <a href="/page/@page.Slug" target="_blank" class="btn btn-sm btn-outline-primary">View</a>\n                                        </td>\n                                    </tr>\n                                }\n                            </tbody>\n                        </table>\n                        <a href="/admin/pages" class="btn btn-outline-primary">View All Pages</a>\n                    }\n                    else\n                    {\n                        <p>No pages found. <a href="/admin/pages/create">Create your first page</a>.</p>\n                    }\n                </div>\n            </div>\n        </div>\n        \n        <div class="col-md-4">\n            <div class="card">\n                <div class="card-header">\n                    <h3>System Information</h3>\n                </div>\n                <div class="card-body">\n                    <p><strong>Current Time:</strong> @DateTime.Now.ToString("f")</p>\n                    <p><strong>Server Status:</strong> <span class="badge bg-success">Online</span></p>\n                    <p><strong>Database:</strong> <span class="badge bg-success">Connected</span></p>\n                    <p><strong>Last Login:</strong> @DateTime.Now.AddHours(-2).ToString("f")</p>\n                </div>\n            </div>\n        </div>\n    </div>\n</div>\n\n@code {\n    private List<Page> _pages;\n    private bool _loading = true;\n    \n    protected override async Task OnInitializedAsync()\n    {\n        await LoadPagesAsync();\n    }\n    \n    private async Task LoadPagesAsync()\n    {\n        try\n        {\n            _loading = true;\n            _pages = await PageService.GetAllPagesAsync();\n        }\n        catch (Exception)\n        {\n            _pages = new List<Page>();\n        }\n        finally\n        {\n            _loading = false;\n        }\n    }\n}\n</create-file>\n</function_calls>'}