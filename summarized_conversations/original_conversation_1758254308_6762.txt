{'role': 'assistant', 'content': 'Now let\'s update the Program.cs file to include our database context and other necessary services:\n\n<function_calls>\n<full-file-rewrite file_path="PersonalWebsite/PersonalWebsite.Server/Program.cs">\nusing Microsoft.EntityFrameworkCore;\nusing PersonalWebsite.Server.Data;\nusing Microsoft.AspNetCore.Authentication.Cookies;\n\nvar builder = WebApplication.CreateBuilder(args);\n\n// Add services to the container.\n// Learn more about configuring Swagger/OpenAPI at https://aka.ms/aspnetcore/swashbuckle\nbuilder.Services.AddEndpointsApiExplorer();\nbuilder.Services.AddSwaggerGen();\n\n// Add controllers and API explorer\nbuilder.Services.AddControllers();\n\n// Add SQLite database\nbuilder.Services.AddDbContext<ApplicationDbContext>(options =>\n    options.UseSqlite(builder.Configuration.GetConnectionString("DefaultConnection")));\n\n// Add authentication\nbuilder.Services.AddAuthentication(CookieAuthenticationDefaults.AuthenticationScheme)\n    .AddCookie(options =>\n    {\n        options.Cookie.HttpOnly = true;\n        options.ExpireTimeSpan = TimeSpan.FromHours(24);\n        options.LoginPath = "/admin/login";\n        options.LogoutPath = "/admin/logout";\n        options.AccessDeniedPath = "/admin/access-denied";\n        options.SlidingExpiration = true;\n    });\n\n// Add authorization\nbuilder.Services.AddAuthorization(options =>\n{\n    options.AddPolicy("AdminOnly", policy => policy.RequireRole("Admin"));\n});\n\n// Add CORS\nbuilder.Services.AddCors(options =>\n{\n    options.AddPolicy("AllowAll", builder =>\n    {\n        builder.AllowAnyOrigin()\n               .AllowAnyMethod()\n               .AllowAnyHeader();\n    });\n});\n\nvar app = builder.Build();\n\n// Configure the HTTP request pipeline.\nif (app.Environment.IsDevelopment())\n{\n    app.UseSwagger();\n    app.UseSwaggerUI();\n    app.UseDeveloperExceptionPage();\n}\n\napp.UseHttpsRedirection();\napp.UseStaticFiles();\napp.UseRouting();\n\napp.UseCors("AllowAll");\n\napp.UseAuthentication();\napp.UseAuthorization();\n\napp.MapControllers();\n\n// Fallback to index for SPA routing\napp.MapFallbackToFile("index.html");\n\napp.Run();\n</full-file-rewrite>\n</function_calls>'}