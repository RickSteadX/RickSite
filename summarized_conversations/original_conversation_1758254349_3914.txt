{'role': 'assistant', 'content': 'Now let\'s create the login page for the admin area:\n\n<function_calls>\n<create-file file_path="PersonalWebsite/PersonalWebsite.Client/Pages/Login.razor">\n@page "/login"\n@inject AuthService AuthService\n@inject NavigationManager NavigationManager\n@inject AuthenticationStateProvider AuthStateProvider\n\n<PageTitle>Login - Alex Morgan</PageTitle>\n\n<div class="container">\n    <div class="row justify-content-center">\n        <div class="col-md-6">\n            <div class="card mt-5">\n                <div class="card-header">\n                    <h2>Admin Login</h2>\n                </div>\n                <div class="card-body">\n                    <EditForm Model="@_loginModel" OnValidSubmit="HandleLogin">\n                        <DataAnnotationsValidator />\n                        <ValidationSummary />\n\n                        @if (!string.IsNullOrEmpty(_errorMessage))\n                        {\n                            <div class="alert alert-danger">\n                                @_errorMessage\n                            </div>\n                        }\n\n                        <div class="form-group">\n                            <label for="username" class="form-label">Username</label>\n                            <InputText id="username" @bind-Value="_loginModel.Username" class="form-control" />\n                            <ValidationMessage For="@(() => _loginModel.Username)" />\n                        </div>\n\n                        <div class="form-group">\n                            <label for="password" class="form-label">Password</label>\n                            <InputText id="password" @bind-Value="_loginModel.Password" type="password" class="form-control" />\n                            <ValidationMessage For="@(() => _loginModel.Password)" />\n                        </div>\n\n                        <div class="form-group mt-4">\n                            <button type="submit" class="btn btn-primary" disabled="@_isLoading">\n                                @if (_isLoading)\n                                {\n                                    <span>Logging in...</span>\n                                }\n                                else\n                                {\n                                    <span>Login</span>\n                                }\n                            </button>\n                        </div>\n                    </EditForm>\n                </div>\n                <div class="card-footer">\n                    <p class="mb-0">Demo credentials: admin / admin123</p>\n                </div>\n            </div>\n        </div>\n    </div>\n</div>\n\n@code {\n    private LoginModel _loginModel = new LoginModel();\n    private bool _isLoading = false;\n    private string _errorMessage = string.Empty;\n\n    protected override async Task OnInitializedAsync()\n    {\n        // Check if user is already logged in\n        var authState = await AuthStateProvider.GetAuthenticationStateAsync();\n        if (authState.User.Identity.IsAuthenticated)\n        {\n            NavigationManager.NavigateTo("/admin");\n        }\n    }\n\n    private async Task HandleLogin()\n    {\n        _isLoading = true;\n        _errorMessage = string.Empty;\n\n        try\n        {\n            var user = await AuthService.LoginAsync(_loginModel.Username, _loginModel.Password);\n            \n            if (user != null)\n            {\n                var authStateProvider = (CustomAuthStateProvider)AuthStateProvider;\n                authStateProvider.NotifyUserAuthentication(user);\n                NavigationManager.NavigateTo("/admin");\n            }\n        }\n        catch (Exception ex)\n        {\n            _errorMessage = "Invalid username or password";\n        }\n        finally\n        {\n            _isLoading = false;\n        }\n    }\n\n    private class LoginModel\n    {\n        [Required(ErrorMessage = "Username is required")]\n        public string Username { get; set; }\n\n        [Required(ErrorMessage = "Password is required")]\n        public string Password { get; set; }\n    }\n}\n</create-file>\n</function_calls>'}