{'role': 'assistant', 'content': 'Now let\'s create the MainLayout component for our application:\n\n<function_calls>\n<create-file file_path="PersonalWebsite/PersonalWebsite.Client/Shared/MainLayout.razor">\n@inherits LayoutComponentBase\n@inject IJSRuntime JSRuntime\n@implements IDisposable\n\n<div class="@(_isDarkTheme ? "dark-theme" : "")">\n    <header class="navbar">\n        <a href="/" class="navbar-brand">Alex Morgan</a>\n        <NavMenu />\n        <button class="theme-toggle" @onclick="ToggleTheme">\n            @if (_isDarkTheme)\n            {\n                <span>‚òÄÔ∏è</span>\n            }\n            else\n            {\n                <span>üåô</span>\n            }\n        </button>\n    </header>\n\n    <main class="main">\n        <div class="container">\n            @Body\n        </div>\n    </main>\n\n    <footer class="footer">\n        <div class="container">\n            <p>&copy; @DateTime.Now.Year - Alex Morgan. All rights reserved.</p>\n            <div>\n                <a href="https://github.com/alexmorgan" target="_blank" rel="noopener noreferrer">GitHub</a> |\n                <a href="https://linkedin.com/in/alexmorgan" target="_blank" rel="noopener noreferrer">LinkedIn</a> |\n                <a href="https://twitter.com/alexmorgan" target="_blank" rel="noopener noreferrer">Twitter</a>\n            </div>\n        </div>\n    </footer>\n</div>\n\n@code {\n    private bool _isDarkTheme;\n    private IJSObjectReference _module;\n\n    protected override async Task OnInitializedAsync()\n    {\n        await base.OnInitializedAsync();\n    }\n\n    protected override async Task OnAfterRenderAsync(bool firstRender)\n    {\n        if (firstRender)\n        {\n            _module = await JSRuntime.InvokeAsync<IJSObjectReference>("import", "./js/theme.js");\n            _isDarkTheme = await _module.InvokeAsync<bool>("getThemePreference");\n            StateHasChanged();\n        }\n    }\n\n    private async Task ToggleTheme()\n    {\n        _isDarkTheme = !_isDarkTheme;\n        if (_module != null)\n        {\n            await _module.InvokeVoidAsync("setThemePreference", _isDarkTheme);\n        }\n    }\n\n    public void Dispose()\n    {\n        _module?.DisposeAsync();\n    }\n}\n</create-file>\n</function_calls>'}