{'role': 'assistant', 'content': 'Now let\'s create the AdminNavMenu component:\n\n<function_calls>\n<create-file file_path="PersonalWebsite/PersonalWebsite.Client/Shared/AdminNavMenu.razor">\n@inject NavigationManager NavigationManager\n@inject AuthenticationStateProvider AuthStateProvider\n\n<nav>\n    <ul class="navbar-nav">\n        <AuthorizeView>\n            <Authorized>\n                <li class="nav-item">\n                    <span class="nav-link">Welcome, @context.User.Identity.Name</span>\n                </li>\n                <li class="nav-item">\n                    <a class="nav-link" href="#" @onclick="LogoutAsync" @onclick:preventDefault>\n                        Logout\n                    </a>\n                </li>\n            </Authorized>\n            <NotAuthorized>\n                <li class="nav-item">\n                    <NavLink class="nav-link" href="/login">\n                        Login\n                    </NavLink>\n                </li>\n            </NotAuthorized>\n        </AuthorizeView>\n    </ul>\n</nav>\n\n@code {\n    private async Task LogoutAsync()\n    {\n        var authStateProvider = (CustomAuthStateProvider)AuthStateProvider;\n        var authService = new AuthService(new HttpClient { BaseAddress = new Uri(NavigationManager.BaseUri) });\n        \n        try\n        {\n            await authService.LogoutAsync();\n            authStateProvider.NotifyUserLogout();\n            NavigationManager.NavigateTo("/login");\n        }\n        catch (Exception)\n        {\n            // Handle logout failure\n        }\n    }\n}\n</create-file>\n</function_calls>'}