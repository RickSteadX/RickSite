{'role': 'assistant', 'content': 'Now let\'s create a service for managing pages:\n\n<function_calls>\n<create-file file_path="PersonalWebsite/PersonalWebsite.Client/Services/PageService.cs">\nusing System;\nusing System.Collections.Generic;\nusing System.Net.Http;\nusing System.Net.Http.Json;\nusing System.Threading.Tasks;\nusing PersonalWebsite.Client.Models;\n\nnamespace PersonalWebsite.Client.Services\n{\n    public class PageService\n    {\n        private readonly HttpClient _httpClient;\n        private const string PagesUrl = "api/pages";\n\n        public PageService(HttpClient httpClient)\n        {\n            _httpClient = httpClient;\n        }\n\n        public async Task<List<Page>> GetPagesAsync()\n        {\n            return await _httpClient.GetFromJsonAsync<List<Page>>(PagesUrl);\n        }\n\n        public async Task<List<Page>> GetAllPagesAsync()\n        {\n            return await _httpClient.GetFromJsonAsync<List<Page>>($"{PagesUrl}/all");\n        }\n\n        public async Task<Page> GetPageAsync(int id)\n        {\n            return await _httpClient.GetFromJsonAsync<Page>($"{PagesUrl}/{id}");\n        }\n\n        public async Task<Page> GetPageBySlugAsync(string slug)\n        {\n            return await _httpClient.GetFromJsonAsync<Page>($"{PagesUrl}/slug/{slug}");\n        }\n\n        public async Task<List<object>> GetNavigationAsync()\n        {\n            return await _httpClient.GetFromJsonAsync<List<object>>($"{PagesUrl}/navigation");\n        }\n\n        public async Task<Page> CreatePageAsync(Page page)\n        {\n            var response = await _httpClient.PostAsJsonAsync(PagesUrl, page);\n            response.EnsureSuccessStatusCode();\n            return await response.Content.ReadFromJsonAsync<Page>();\n        }\n\n        public async Task UpdatePageAsync(int id, Page page)\n        {\n            var response = await _httpClient.PutAsJsonAsync($"{PagesUrl}/{id}", page);\n            response.EnsureSuccessStatusCode();\n        }\n\n        public async Task DeletePageAsync(int id)\n        {\n            var response = await _httpClient.DeleteAsync($"{PagesUrl}/{id}");\n            response.EnsureSuccessStatusCode();\n        }\n    }\n}\n</create-file>\n</function_calls>'}