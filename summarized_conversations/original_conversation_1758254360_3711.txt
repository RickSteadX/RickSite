{'role': 'assistant', 'content': 'Now let\'s create a Caddyfile for our Caddy web server configuration:\n\n<function_calls>\n<create-file file_path="PersonalWebsite/Caddyfile">\n# Caddyfile for Personal Website\n\n# Replace example.com with your actual domain in production\n# For local development, you can use localhost\n:80 {\n    # Reverse proxy to the ASP.NET Core application\n    reverse_proxy webapp:80 {\n        # Health checks\n        health_path /health\n        health_interval 30s\n        health_timeout 10s\n        health_status 200\n    }\n\n    # Enable compression\n    encode gzip zstd\n\n    # Set security headers\n    header {\n        # Enable HTTP Strict Transport Security (HSTS)\n        Strict-Transport-Security "max-age=31536000; includeSubDomains; preload"\n        \n        # Prevent MIME type sniffing\n        X-Content-Type-Options "nosniff"\n        \n        # Enable XSS protection\n        X-XSS-Protection "1; mode=block"\n        \n        # Prevent clickjacking\n        X-Frame-Options "SAMEORIGIN"\n        \n        # Control browser features\n        Permissions-Policy "camera=(), microphone=(), geolocation=(), interest-cohort=()"\n        \n        # Content Security Policy\n        Content-Security-Policy "default-src \'self\'; script-src \'self\' \'unsafe-inline\' https://cdnjs.cloudflare.com; style-src \'self\' \'unsafe-inline\' https://fonts.googleapis.com; font-src \'self\' https://fonts.gstatic.com; img-src \'self\' data: https://*; connect-src \'self\'"\n        \n        # Remove Server header\n        -Server\n    }\n\n    # Log requests\n    log {\n        output file /var/log/caddy/access.log\n        format json\n    }\n\n    # Handle errors\n    handle_errors {\n        root * /usr/share/caddy\n        file_server\n    }\n}\n\n# For production with HTTPS, uncomment and modify the following:\n# example.com {\n#     reverse_proxy webapp:80\n#     encode gzip zstd\n#     tls your-email@example.com\n#     # Same headers and other configurations as above\n# }\n</create-file>\n</function_calls>'}