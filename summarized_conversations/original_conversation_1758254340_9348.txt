{'role': 'assistant', 'content': 'Now let\'s create the theme.js file for handling theme preferences:\n\n<function_calls>\n<create-file file_path="PersonalWebsite/PersonalWebsite.Client/wwwroot/js/theme.js">\n// Theme management functions\n\n// Check if user has a theme preference stored in localStorage\nexport function getThemePreference() {\n    const savedTheme = localStorage.getItem(\'theme-preference\');\n    \n    if (savedTheme) {\n        return savedTheme === \'dark\';\n    } else {\n        // Check if user\'s system prefers dark mode\n        const prefersDark = window.matchMedia(\'(prefers-color-scheme: dark)\').matches;\n        return prefersDark;\n    }\n}\n\n// Save user\'s theme preference to localStorage\nexport function setThemePreference(isDarkTheme) {\n    localStorage.setItem(\'theme-preference\', isDarkTheme ? \'dark\' : \'light\');\n    return isDarkTheme;\n}\n\n// Initialize particles.js for the hero section\nexport function initParticles() {\n    if (typeof particlesJS !== \'undefined\' && document.getElementById(\'particles-js\')) {\n        particlesJS(\'particles-js\', {\n            particles: {\n                number: {\n                    value: 80,\n                    density: {\n                        enable: true,\n                        value_area: 800\n                    }\n                },\n                color: {\n                    value: \'#ffffff\'\n                },\n                shape: {\n                    type: \'circle\',\n                    stroke: {\n                        width: 0,\n                        color: \'#000000\'\n                    },\n                    polygon: {\n                        nb_sides: 5\n                    }\n                },\n                opacity: {\n                    value: 0.5,\n                    random: false,\n                    anim: {\n                        enable: false,\n                        speed: 1,\n                        opacity_min: 0.1,\n                        sync: false\n                    }\n                },\n                size: {\n                    value: 3,\n                    random: true,\n                    anim: {\n                        enable: false,\n                        speed: 40,\n                        size_min: 0.1,\n                        sync: false\n                    }\n                },\n                line_linked: {\n                    enable: true,\n                    distance: 150,\n                    color: \'#ffffff\',\n                    opacity: 0.4,\n                    width: 1\n                },\n                move: {\n                    enable: true,\n                    speed: 2,\n                    direction: \'none\',\n                    random: false,\n                    straight: false,\n                    out_mode: \'out\',\n                    bounce: false,\n                    attract: {\n                        enable: false,\n                        rotateX: 600,\n                        rotateY: 1200\n                    }\n                }\n            },\n            interactivity: {\n                detect_on: \'canvas\',\n                events: {\n                    onhover: {\n                        enable: true,\n                        mode: \'grab\'\n                    },\n                    onclick: {\n                        enable: true,\n                        mode: \'push\'\n                    },\n                    resize: true\n                },\n                modes: {\n                    grab: {\n                        distance: 140,\n                        line_linked: {\n                            opacity: 1\n                        }\n                    },\n                    bubble: {\n                        distance: 400,\n                        size: 40,\n                        duration: 2,\n                        opacity: 8,\n                        speed: 3\n                    },\n                    repulse: {\n                        distance: 200,\n                        duration: 0.4\n                    },\n                    push: {\n                        particles_nb: 4\n                    },\n                    remove: {\n                        particles_nb: 2\n                    }\n                }\n            },\n            retina_detect: true\n        });\n    }\n}\n\n// Initialize parallax scrolling effect\nexport function initParallax() {\n    window.addEventListener(\'scroll\', function() {\n        const parallaxElements = document.querySelectorAll(\'.parallax-element\');\n        \n        parallaxElements.forEach(element => {\n            const position = element.getBoundingClientRect();\n            const speed = element.dataset.speed || 0.5;\n            \n            // Only apply parallax if element is in viewport\n            if (position.top < window.innerHeight && position.bottom > 0) {\n                const yPos = -(window.scrollY * speed);\n                element.style.transform = `translateY(${yPos}px)`;\n            }\n        });\n    });\n}\n\n// Initialize smooth page transitions\nexport function initPageTransitions() {\n    document.addEventListener(\'DOMContentLoaded\', () => {\n        document.body.classList.add(\'fade-in\');\n    });\n}\n\n// Initialize all JavaScript features\nexport function initAll() {\n    initParticles();\n    initParallax();\n    initPageTransitions();\n}\n</create-file>\n</function_calls>'}